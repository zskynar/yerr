[{"/Users/zack/Sites/yerr/src/index.js":"1","/Users/zack/Sites/yerr/src/App.js":"2","/Users/zack/Sites/yerr/src/reportWebVitals.js":"3","/Users/zack/Sites/yerr/src/Yerr.js":"4","/Users/zack/Sites/yerr/src/People.js":"5"},{"size":532,"mtime":1608912731606,"results":"6","hashOfConfig":"7"},{"size":3444,"mtime":1609010504392,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608827652417,"results":"9","hashOfConfig":"7"},{"size":2364,"mtime":1608965017337,"results":"10","hashOfConfig":"7"},{"size":2192,"mtime":1608963727554,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"lg2amp",{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/zack/Sites/yerr/src/index.js",[],["24","25"],"/Users/zack/Sites/yerr/src/App.js",["26","27","28","29"],"/Users/zack/Sites/yerr/src/reportWebVitals.js",[],"/Users/zack/Sites/yerr/src/Yerr.js",["30","31"],"import React, {Component} from 'react';\nimport {Howl, Howler} from 'howler';\nimport { gsap } from \"gsap\";\n\nclass Yerr extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            playing: false\n        }\n\n        // This binding is necessary to make `this` work in the callback\n        this.playAudio = this.playAudio.bind(this);\n        this.togglePlaying = this.togglePlaying.bind(this);\n\n        // reference to the DOM node\n        this.element = null;\n        // reference to the animation\n        this.timeline = null;\n    }\n\n    togglePlaying() {\n        this.setState((prevState, props) => ({\n            playing: !prevState.playing\n        }));\n    }\n\n    playAudio() {\n        const $this = this\n        const {file, handler, changeBackground} = this.props;\n\n        var sound = new Howl({\n            src: [file],\n            onplay: function() {\n                $this.togglePlaying()\n                changeBackground()\n                handler()\n            },\n            onend: function() {\n                $this.togglePlaying()\n                handler()\n            },\n        });\n    \n        if (!this.state.playing) {\n            sound.play()\n        }\n    }\n\n    componentDidMount() {\n        this.playAudio()\n\n        this.timeline = gsap.timeline()\n        this.timeline.fromTo(this.element, 0.75, {scale: 5, autoAlpha: 0}, {scale: 1, autoAlpha: 1, ease: \"power2.out\"}, 0)\n        this.timeline.to(this.element, 20, {rotation:\"360\", ease: \"none\", repeat:-1}, 0.5)\n    }\n\n    componentDidUpdate() {\n        if (!this.props.lastYerr) {\n            gsap.to(this.element, 0.75, {scale: 0.75, autoAlpha: 0, ease: \"power2.out\", onComplete: this.timeline.pause() })\n        }\n    }\n\n    render() {\n      const {name, file, credit, background} = this.props;\n  \n      return (\n        <div className=\"yerr grid-item\" onClick={this.playAudio} ref={div => this.element = div}>\n            <div className=\"yerr-info\">\n              <div className=\"yerr-title\">\n                <h2>{name}</h2>\n              </div>\n              <div className=\"yerr-credit\">\n                <span className=\"credits\">Credits</span>\n                <h3>{credit}</h3>\n              </div>\n            </div>\n            <img className=\"yerr-image\" src={background} alt=\"yerr\"/>\n        </div>\n      )\n    }\n  }\n\n  export default Yerr;","/Users/zack/Sites/yerr/src/People.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":2,"column":10,"nodeType":"38","messageId":"39","endLine":2,"endColumn":14},{"ruleId":"36","severity":1,"message":"40","line":19,"column":7,"nodeType":"38","messageId":"39","endLine":19,"endColumn":15},{"ruleId":"41","severity":1,"message":"42","line":33,"column":9,"nodeType":"43","endLine":33,"endColumn":44},{"ruleId":"41","severity":1,"message":"42","line":59,"column":23,"nodeType":"43","endLine":59,"endColumn":46},{"ruleId":"36","severity":1,"message":"44","line":2,"column":15,"nodeType":"38","messageId":"39","endLine":2,"endColumn":21},{"ruleId":"36","severity":1,"message":"45","line":66,"column":20,"nodeType":"38","messageId":"39","endLine":66,"endColumn":24},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'gsap' is defined but never used.","Identifier","unusedVar","'shareUrl' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Howler' is defined but never used.","'file' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]